-- Stand Bot v1.1.5
-- Notes:
-- - All configurable settings + OwnerId are set in the loader using getgenv()
-- - Commands list: see docs, split into Owner-only, Tools, Cash, Misc
-- - Always reads from getgenv().BotSettings and getgenv().OwnerId

--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local StarterGui = game:GetService("StarterGui")

local LP = Players.LocalPlayer
local OwnerId = getgenv().OwnerId or 0
local BotSettings = getgenv().BotSettings or {}
local version = "v1.1.5"

local action = "Idle"
local fps = 0
local chatHistory = {}
local whitelist = { [OwnerId] = true }
local autoDropping = false
local whiteOverlay = nil

--// Helpers
local function notify(msg)
    StarterGui:SetCore("SendNotification", {
        Title = "Stand Bot",
        Text = msg,
        Duration = 5
    })
end

-- Anti-fling protection
LP.CharacterAdded:Connect(function(char)
    task.wait(1)
    for _, v in ipairs(char:GetDescendants()) do
        if v:IsA("BasePart") then
            v.CustomPhysicalProperties = PhysicalProperties.new(0, 0, 0)
        end
    end
end)

-- FPS tracker
RunService.RenderStepped:Connect(function(dt)
    fps = math.floor(1 / dt)
end)

-- FPS limiter
if setfpscap then
    setfpscap(BotSettings.MaxFps or 45)
end

--// GUI
local ScreenGui = Instance.new("ScreenGui", LP:WaitForChild("PlayerGui"))
ScreenGui.ResetOnSpawn = false

-- Action status (left middle)
local actionLabel = Instance.new("TextLabel", ScreenGui)
actionLabel.Size = UDim2.new(0,200,0,50)
actionLabel.Position = UDim2.new(0,10,0.5,-25)
actionLabel.TextScaled = true
actionLabel.BackgroundTransparency = 0.5
actionLabel.TextColor3 = Color3.fromRGB(255,255,255)
actionLabel.Text = "Action: Idle"

-- Info panel (right middle)
local infoLabel = Instance.new("TextLabel", ScreenGui)
infoLabel.Size = UDim2.new(0,200,0,70)
infoLabel.Position = UDim2.new(1,-210,0.5,-35)
infoLabel.TextScaled = true
infoLabel.BackgroundTransparency = 0.5
infoLabel.TextColor3 = Color3.fromRGB(255,255,255)
infoLabel.Text = "Owner: ???\nVersion: "..version.."\nFPS: 0"

-- Chat logs (top left)
local chatFrame = Instance.new("Frame", ScreenGui)
chatFrame.Size = UDim2.new(0,300,0,200)
chatFrame.Position = UDim2.new(0,10,0,10)
chatFrame.BackgroundTransparency = 0.3
chatFrame.BackgroundColor3 = Color3.fromRGB(0,0,0)
chatFrame.Visible = false

local chatList = Instance.new("UIListLayout", chatFrame)
chatList.SortOrder = Enum.SortOrder.LayoutOrder

local function updateChatLog()
    for _, child in ipairs(chatFrame:GetChildren()) do
        if child:IsA("TextLabel") then child:Destroy() end
    end
    for _,msg in ipairs(chatHistory) do
        local label = Instance.new("TextLabel", chatFrame)
        label.Size = UDim2.new(1,0,0,20)
        label.TextScaled = true
        label.BackgroundTransparency = 1
        if msg.from == OwnerId then
            label.TextColor3 = Color3.fromRGB(255,215,0)
        else
            label.TextColor3 = Color3.fromRGB(255,255,255)
        end
        label.Text = msg.text
    end
end

--// Commands
local function handleCommand(player, message)
    if not whitelist[player.UserId] then return end

    local args = string.split(message," ")
    local cmd = args[1]:lower()

    if cmd == "s" or cmd == "summon!" then
        action = "Summoning"
        if LP.Character and player.Character then
            local root = LP.Character:FindFirstChild("HumanoidRootPart")
            local target = player.Character:FindFirstChild("HumanoidRootPart")
            if root and target then
                root.CFrame = target.CFrame + Vector3.new(0,0,3)
            end
        end

    elseif cmd == "stop!" then
        action = "Idle"
        autoDropping = false

    elseif cmd == "hide!" then
        action = "Hiding"
        if LP.Character then
            LP.Character:FindFirstChild("HumanoidRootPart").CFrame = CFrame.new(9999,9999,9999)
        end

    elseif cmd == "unhide!" then
        action = "Unhiding"
        if LP.Character and player.Character then
            LP.Character:FindFirstChild("HumanoidRootPart").CFrame = player.Character.HumanoidRootPart.CFrame
        end

    elseif cmd == "creds!" then
        notify("Script made by KryvenDev")

    elseif cmd == "version!" then
        notify("Bot Version: "..version)

    elseif cmd == "cmds!" then
        notify("Commands Part 1: whitelist!, unwhitelist!, checkwl!, rj!/rejoin!, wallet!, unwallet!")
        task.wait(1)
        notify("Commands Part 2: summon!/s, auto! <user>, stop!, hide!, unhide!, creds!, version!")
        task.wait(1)
        notify("Commands Part 3: dropcash! <amt>, autodrop! <amt>, chatlogs!, whitescreen!, unwhitescreen!")

    elseif cmd == "wallet!" then
        local tool = LP.Backpack:FindFirstChild("Wallet")
        if tool then
            tool.Parent = LP.Character
        end

    elseif cmd == "unwallet!" then
        for _, t in ipairs(LP.Character:GetChildren()) do
            if t:IsA("Tool") then
                t.Parent = LP.Backpack
            end
        end

    elseif cmd == "dropcash!" and args[2] then
        local amt = math.min(tonumber(args[2]) or 0,15000)
        notify("Dropping "..amt)
        -- Drop logic here (placeholder)

    elseif cmd == "autodrop!" and args[2] then
        local amt = math.min(tonumber(args[2]) or 0,15000)
        autoDropping = true
        task.spawn(function()
            while autoDropping do
                notify("Autodropping "..amt)
                task.wait(1)
            end
        end)

    elseif cmd == "chatlogs!" then
        chatFrame.Visible = not chatFrame.Visible

    elseif cmd == "rj!" or cmd == "rejoin!" then
        TeleportService:Teleport(game.PlaceId, LP)

    elseif cmd == "whitelist!" and args[2] then
        local target = Players:FindFirstChild(args[2])
        if target then
            whitelist[target.UserId] = true
            notify("Whitelisted "..target.DisplayName)
        end

    elseif cmd == "unwhitelist!" and args[2] then
        local target = Players:FindFirstChild(args[2])
        if target and target.UserId ~= OwnerId then
            whitelist[target.UserId] = nil
            notify("Removed "..target.DisplayName.." from whitelist")
        end

    elseif cmd == "checkwl!" then
        local names = {}
        for id,_ in pairs(whitelist) do
            local p = Players:GetPlayerByUserId(id)
            if p then table.insert(names,p.DisplayName) end
        end
        notify("Whitelisted: "..table.concat(names,", "))

    elseif cmd == "auto!" and args[2] then
        local target = Players:FindFirstChild(args[2])
        if target and target.Character then
            action = "Strafing "..target.DisplayName
            task.spawn(function()
                local humrp = LP.Character and LP.Character:FindFirstChild("HumanoidRootPart")
                local tHumrp = target.Character:FindFirstChild("HumanoidRootPart")
                if humrp and tHumrp then
                    for i=1,BotSettings.StrafeDuration do
                        if not whitelist[player.UserId] then break end
                        humrp.CFrame = tHumrp.CFrame * CFrame.new(BotSettings.StrafeDistance,0,0)
                        task.wait(1/BotSettings.StrafeSpeed)
                    end
                end
                action = "Idle"
            end)
        end

    elseif cmd == "whitescreen!" then
        if not whiteOverlay then
            whiteOverlay = Instance.new("Frame", ScreenGui)
            whiteOverlay.Size = UDim2.new(1,0,1,0)
            whiteOverlay.BackgroundColor3 = Color3.fromRGB(255,255,255)
            whiteOverlay.ZIndex = 0
        end
        whiteOverlay.Visible = true

    elseif cmd == "unwhitescreen!" then
        if whiteOverlay then whiteOverlay.Visible = false end
    end
end

-- Chat listener
Players.PlayerChatted:Connect(function(player, message)
    table.insert(chatHistory, {from=player.UserId,text=player.DisplayName..": "..message})
    if #chatHistory > 10 then table.remove(chatHistory,1) end
    updateChatLog()
    handleCommand(player, message)
end)

-- Info panel update
RunService.RenderStepped:Connect(function()
    actionLabel.Text = "Action: "..action
    local ownerName = "Unknown"
    local owner = Players:GetPlayerByUserId(OwnerId)
    if owner then ownerName = owner.DisplayName end
    infoLabel.Text = "Owner: "..ownerName.."\nVersion: "..version.."\nFPS: "..tostring(fps)
end)

--// =====================================================
--// Nervox Stand Bot v1.1.6
--// Made by KryvenDev
--// Notes: Updated with all functions, GUIs, and fixes.
--// =====================================================

--// ========= SERVICES ========= \\--
local Players = game:GetService("Players")
local TextChatService = game:GetService("TextChatService")
local TeleportService = game:GetService("TeleportService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Lighting = game:GetService("Lighting")
local LP = Players.LocalPlayer

--// ========= SETTINGS ========= \\--
local OwnerId = getgenv().OwnerId or 0
local BotSettings = getgenv().BotSettings or {}
local Version = "v1.1.6"

--// ========= VARIABLES ========= \\--
local Whitelist = { [OwnerId] = true }
local AutoConnection, HideConnection, DropConnection
local Status, Info, ChatFrame
local WhitescreenGui

--// ========= UTILITIES ========= \\--
local function sendChat(msg)
    local ch = TextChatService.TextChannels:FindFirstChild("RBXGeneral")
    if ch then ch:SendAsync(msg) end
end

local function getHumanoid()
    local char = LP.Character or LP.CharacterAdded:Wait()
    return char:FindFirstChildOfClass("Humanoid")
end

local function disableAnimations(char)
    if not BotSettings.DisableAnimations then return end
    local animate = char:FindFirstChild("Animate")
    if animate then animate:Destroy() end
    for _, a in pairs(char:GetDescendants()) do
        if a:IsA("Animator") then
            for _, track in pairs(a:GetPlayingAnimationTracks()) do
                track:Stop()
            end
        end
    end
end

local function equipTool(name)
    local hum = getHumanoid()
    if hum then
        local tool = LP.Backpack:FindFirstChild(name)
        if tool then hum:EquipTool(tool) end
    end
end

local function unequipAll()
    local hum = getHumanoid()
    if hum then hum:UnequipTools() end
end

local function summonTo(player)
    if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        (LP.Character or LP.CharacterAdded:Wait()):MoveTo(player.Character.HumanoidRootPart.Position)
    end
end

local function rejoin()
    TeleportService:Teleport(game.PlaceId, LP)
end

local function findPlayerByName(query)
    query = query:lower():gsub("^%s+", ""):gsub("%s+$", "")
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr.Name:lower():find(query, 1, true) or (plr.DisplayName and plr.DisplayName:lower():find(query, 1, true)) then
            return plr
        end
    end
end

local function forceResetAndReturn()
    local hum = getHumanoid()
    if hum then hum.Health = 0 end
    LP.CharacterAdded:Wait()
    local owner = Players:GetPlayerByUserId(OwnerId)
    if owner and owner.Character and owner.Character:FindFirstChild("HumanoidRootPart") then
        local hrp = (LP.Character or LP.CharacterAdded:Wait()):WaitForChild("HumanoidRootPart")
        hrp.CFrame = owner.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)
    end
end

local function stopAll()
    if AutoConnection then AutoConnection:Disconnect() AutoConnection = nil end
    if HideConnection then HideConnection:Disconnect() HideConnection = nil end
    if DropConnection then DropConnection:Disconnect() DropConnection = nil end
    if Status then Status.Text = "Idle" end
end

local function autoStrafe(target)
    stopAll()
    local char = LP.Character or LP.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    local hum = char:FindFirstChildOfClass("Humanoid")
    disableAnimations(char)
    local startTime = tick()

    Status.Text = "Auto-Strafing " .. target.Name

    AutoConnection = RunService.Heartbeat:Connect(function()
        if not target or not target.Parent then stopAll() return end
        local targetChar = target.Character
        local targetHum = targetChar and targetChar:FindFirstChildOfClass("Humanoid")
        local targetHRP = targetChar and targetChar:FindFirstChild("HumanoidRootPart")
        if not targetChar or not targetHRP or not targetHum then return end
        if targetHum.Health <= 0 then stopAll() return end
        if tick() - startTime >= BotSettings.StrafeDuration then stopAll() return end

        if hum.Health / hum.MaxHealth * 100 <= BotSettings.LowHealthThreshold then
            stopAll()
            forceResetAndReturn()
            return
        end

        local angle = tick() * BotSettings.StrafeSpeed
        local offset = Vector3.new(math.cos(angle), 0, math.sin(angle)) * BotSettings.StrafeDistance
        local targetCFrame = CFrame.new(targetHRP.Position + offset, targetHRP.Position)
        hrp.CFrame = hrp.CFrame:Lerp(targetCFrame, 0.25)
        hum.Jump = true
    end)
end

local function hideBot()
    stopAll()
    local char = LP.Character or LP.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")

    Status.Text = "Hiding"

    HideConnection = RunService.Heartbeat:Connect(function()
        hrp.CFrame = CFrame.new(
            math.random(-50, 50),
            30 + math.random(0, 10),
            math.random(-50, 50)
        )
        task.wait(0.1)
    end)
end

local function dropCash(amount)
    stopAll()
    local amt = math.clamp(tonumber(amount) or 0, 1, 15000)
    local args = { "DropMoney", tostring(amt) }
    ReplicatedStorage:WaitForChild("MainEvent"):FireServer(unpack(args))
    Status.Text = "Dropped " .. amt
end

local function autoDrop(amount)
    stopAll()
    local amt = math.clamp(tonumber(amount) or 0, 1, 15000)
    local args = { "DropMoney", tostring(amt) }
    sendChat("Autodropping " .. amt .. " | say stop! to stop")
    Status.Text = "Autodropping " .. amt
    DropConnection = RunService.Heartbeat:Connect(function()
        ReplicatedStorage:WaitForChild("MainEvent"):FireServer(unpack(args))
        task.wait(0.5)
    end)
end

local function whitescreen(enable)
    if not WhitescreenGui then
        WhitescreenGui = Instance.new("ScreenGui")
        WhitescreenGui.IgnoreGuiInset = true
        WhitescreenGui.ResetOnSpawn = false
        WhitescreenGui.Parent = game:GetService("CoreGui")

        local frame = Instance.new("Frame", WhitescreenGui)
        frame.Size = UDim2.new(1, 0, 1, 0)
        frame.BackgroundColor3 = Color3.new(1, 1, 1)
        frame.Name = "WhiteFrame"
    end
    WhitescreenGui.Enabled = enable
end

--// ========= FPS LIMITER ========= \\--
local function applyFpsCap()
    if setfpscap and typeof(BotSettings.MaxFps) == "number" then
        setfpscap(BotSettings.MaxFps)
    end
end
applyFpsCap()

--// ========= GUIs ========= \\--
-- Loader
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "NervoxLoader"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game:GetService("CoreGui")

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 250, 0, 120)
Frame.Position = UDim2.new(0.5, -125, 0.1, 0)
Frame.BackgroundColor3 = Color3.fromRGB(25,25,25)
Frame.BorderSizePixel = 0
Instance.new("UICorner", Frame).CornerRadius = UDim.new(0, 8)

local Title = Instance.new("TextLabel", Frame)
Title.Size = UDim2.new(1, 0, 0, 25)
Title.BackgroundTransparency = 1
Title.Text = "Ready | Executed"
Title.TextColor3 = Color3.fromRGB(0,255,0)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 20

local Owner = Players:GetPlayerByUserId(OwnerId)
local ScriptName = Instance.new("TextLabel", Frame)
ScriptName.Size = UDim2.new(1, 0, 0, 20)
ScriptName.Position = UDim2.new(0, 0, 0, 65)
ScriptName.BackgroundTransparency = 1
ScriptName.TextXAlignment = Enum.TextXAlignment.Center
ScriptName.TextColor3 = Color3.fromRGB(200,200,200)
ScriptName.Font = Enum.Font.SourceSans
ScriptName.TextSize = 16
ScriptName.Text = "Nervox Stand Bot " .. Version

task.delay(5, function() ScreenGui:Destroy() end)

-- Status GUI (left)
local StatusGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
local StatusFrame = Instance.new("Frame", StatusGui)
StatusFrame.Size = UDim2.new(0, 200, 0, 40)
StatusFrame.Position = UDim2.new(0, 20, 0.5, -20)
StatusFrame.BackgroundColor3 = Color3.fromRGB(25,25,25)
StatusFrame.BorderSizePixel = 0
Instance.new("UICorner", StatusFrame).CornerRadius = UDim.new(0, 8)

Status = Instance.new("TextLabel", StatusFrame)
Status.Size = UDim2.new(1, -10, 1, 0)
Status.Position = UDim2.new(0, 5, 0, 0)
Status.BackgroundTransparency = 1
Status.TextXAlignment = Enum.TextXAlignment.Left
Status.TextColor3 = Color3.new(1,1,1)
Status.Font = Enum.Font.SourceSansSemibold
Status.TextSize = 16
Status.Text = "Idle"

-- Info GUI (right)
local InfoGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
local InfoFrame = Instance.new("Frame", InfoGui)
InfoFrame.Size = UDim2.new(0, 220, 0, 60)
InfoFrame.Position = UDim2.new(1, -240, 0.5, -30)
InfoFrame.BackgroundColor3 = Color3.fromRGB(25,25,25)
InfoFrame.BorderSizePixel = 0
Instance.new("UICorner", InfoFrame).CornerRadius = UDim.new(0, 8)

Info = Instance.new("TextLabel", InfoFrame)
Info.Size = UDim2.new(1, -10, 1, 0)
Info.Position = UDim2.new(0, 5, 0, 0)
Info.BackgroundTransparency = 1
Info.TextXAlignment = Enum.TextXAlignment.Left
Info.TextColor3 = Color3.new(1,1,1)
Info.Font = Enum.Font.SourceSansSemibold
Info.TextSize = 16
Info.Text = "Owner: " .. (Owner and Owner.Name or "Unknown") .. "\nVersion: " .. Version .. "\nFPS: ..."

-- FPS Display Update
RunService.RenderStepped:Connect(function()
    if Info then
        Info.Text = "Owner: " .. (Owner and Owner.Name or "Unknown")
            .. "\nVersion: " .. Version
            .. "\nFPS: " .. math.floor(1 / RunService.RenderStepped:Wait())
    end
end)

-- ChatLog GUI (top-left)
local ChatGui = Instance.new("ScreenGui", game:GetService("CoreGui"))
ChatFrame = Instance.new("Frame", ChatGui)
ChatFrame.Size = UDim2.new(0, 300, 0, 200)
ChatFrame.Position = UDim2.new(0, 10, 0, 10)
ChatFrame.BackgroundColor3 = Color3.fromRGB(25,25,25)
ChatFrame.BackgroundTransparency = 0.2
ChatFrame.BorderSizePixel = 0
Instance.new("UICorner", ChatFrame).CornerRadius = UDim.new(0, 8)

local Scrolling = Instance.new("ScrollingFrame", ChatFrame)
Scrolling.Size = UDim2.new(1, -10, 1, -10)
Scrolling.Position = UDim2.new(0, 5, 0, 5)
Scrolling.CanvasSize = UDim2.new(0, 0, 0, 0)
Scrolling.BackgroundTransparency = 1
Scrolling.ScrollBarThickness = 6
Scrolling.AutomaticCanvasSize = Enum.AutomaticSize.Y
local UIListLayout = Instance.new("UIListLayout", Scrolling)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 2)

local function addChatLine(sender, text, isOwner)
    local lbl = Instance.new("TextLabel")
    lbl.Parent = Scrolling
    lbl.Size = UDim2.new(1, -5, 0, 20)
    lbl.BackgroundTransparency = 1
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    lbl.Font = Enum.Font.SourceSansSemibold
    lbl.TextColor3 = isOwner and Color3.fromRGB(255, 215, 0) or Color3.new(1,1,1)
    lbl.TextSize = 16
    lbl.Text = sender .. ": " .. text
    task.wait()
    Scrolling.CanvasPosition = Vector2.new(0, math.huge)
end

--// ========= CHAT HANDLER ========= \\--
local function processCommand(sender, msgText)
    local txt = msgText:lower()
    local isOwner = sender.UserId == OwnerId
    local allowed = Whitelist[sender.UserId]

    if not allowed then return end

    -- 🎒 Tools / Movement
    if txt == "wallet!" then
        equipTool("[Wallet]") Status.Text = "Equipped Wallet"
    elseif txt == "unwallet!" then
        unequipAll() Status.Text = "Un-equipped Tools"
    elseif txt == "summon!" or txt == "s" then
        summonTo(sender) Status.Text = "Summoned to " .. sender.Name
    elseif txt:sub(1,5) == "auto!" then
        local query = msgText:sub(7)
        local target = findPlayerByName(query)
        if target then autoStrafe(target) end
    elseif txt == "stop!" then
        stopAll()
        sendChat("Stopped all actions")

    -- 💸 Cash System
    elseif txt:sub(1,9) == "dropcash!" then
        local amt = msgText:sub(10)
        dropCash(amt)
    elseif txt:sub(1,9) == "autodrop!" then
        local amt = msgText:sub(10)
        autoDrop(amt)

    -- 👀 Misc
    elseif txt == "chatlogs!" then
        ChatFrame.Visible = not ChatFrame.Visible
    elseif txt == "hide!" then
        hideBot()
    elseif txt == "creds!" then
        sendChat("Script made by KryvenDev")
    elseif txt == "cmds!" then
        sendChat("Commands (1/3): wallet!, unwallet!, summon!/s, auto! <user>, stop!")
        sendChat("Commands (2/3): dropcash! <amount>, autodrop! <amount>, hide!, chatlogs!")
        sendChat("Commands (3/3): whitelist!, unwhitelist!, checkwl!, rj!/rejoin!, creds!, whitescreen!/unwhitescreen!")

    -- 🔑 Owner-only
    elseif isOwner and txt:sub(1,10) == "whitelist!" then
        local query = msgText:sub(11):gsub("^%s+", "")
        local target = findPlayerByName(query)
        if target then
            Whitelist[target.UserId] = true
            sendChat("Whitelisted " .. target.Name)
        else
            sendChat("Invalid username")
        end
    elseif isOwner and txt:sub(1,12) == "unwhitelist!" then
        local query = msgText:sub(13):gsub("^%s+", "")
        local target = findPlayerByName(query)
        if target and target.UserId ~= OwnerId then
            Whitelist[target.UserId] = nil sendChat("Unwhitelisted " .. target.Name)
        else
            sendChat("Invalid username")
        end
    elseif isOwner and txt == "checkwl!" then
        local names = {}
        for uid, _ in pairs(Whitelist) do
            local plr = Players:GetPlayerByUserId(uid)
            table.insert(names, plr and plr.Name or "UserId:" .. tostring(uid))
        end
        sendChat("Whitelisted: " .. table.concat(names, ", "))
    elseif isOwner and (txt == "rj!" or txt == "rejoin!") then
        rejoin()

    -- ⚡ FPS Helpers
    elseif txt == "whitescreen!" then
        whitescreen(true)
    elseif txt == "unwhitescreen!" then
        whitescreen(false)
    end
end

-- TextChatService Handler
TextChatService.OnIncomingMessage = function(message)
    local src = message.TextSource
    local sender = src and Players:GetPlayerByUserId(src.UserId)
    local msgText = message.Text or ""
    if sender then addChatLine(sender.Name, msgText, src.UserId == OwnerId) end
    if sender and msgText then processCommand(sender, msgText) end
end

-- Legacy chat handler (fallback)
Players.PlayerChatted:Connect(function(sender, msgText)
    if sender and msgText then
        addChatLine(sender.Name, msgText, sender.UserId == OwnerId)
        processCommand(sender, msgText)
    end
end)

--// ========= ANTI-FLING ========= \\--
RunService.Stepped:Connect(function()
    local char = LP.Character
    if char and char:FindFirstChild("HumanoidRootPart") then
        local hrp = char.HumanoidRootPart
        hrp.CanCollide = false
        hrp.AssemblyAngularVelocity = Vector3.zero
        hrp.AssemblyLinearVelocity = Vector3.zero
    end
end)

-- Done
print("[Nervox Stand Bot " .. Version .. "] Loaded.")
